{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nlet LayoutComponent = class LayoutComponent {\n  constructor(router, authservice, titleService) {\n    this.router = router;\n    this.authservice = authservice;\n    this.titleService = titleService;\n    this.modeMenu = 'side';\n    this.showMenu = true;\n    this.userFirstName = '';\n    this.userLastName = '';\n    this.userEmail = '';\n    this.isUserAdmin = false;\n    this.pageTitle = '';\n    this.screenWidth = new BehaviorSubject(window.outerWidth);\n  }\n  ngOnInit() {\n    this.titleService.currentTitle.subscribe(title => {\n      this.pageTitle = title;\n    });\n  }\n  ngAfterViewInit() {\n    this.screenWidth.asObservable().subscribe(width => {\n      if (width < 640) {\n        this.showMenu = false;\n        this.modeMenu = 'over';\n      } else if (width > 640) {\n        this.showMenu = true;\n        this.modeMenu = 'side';\n      }\n    });\n  }\n};\nLayoutComponent = __decorate([Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})], LayoutComponent);\nexport { LayoutComponent };","map":{"version":3,"mappings":";AAAA,SAAwBA,SAAS,QAA2B,eAAe;AAG3E,SAASC,eAAe,QAAQ,MAAM;AAS/B,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAY1BC,YACUC,MAAc,EACdC,WAAwB,EACxBC,YAAiC;IAFjC,WAAM,GAANF,MAAM;IACN,gBAAW,GAAXC,WAAW;IACX,iBAAY,GAAZC,YAAY;IAbtB,aAAQ,GAAkB,MAAM;IAChC,aAAQ,GAAG,IAAI;IACf,kBAAa,GAAG,EAAE;IAClB,iBAAY,GAAG,EAAE;IACjB,cAAS,GAAG,EAAE;IACd,gBAAW,GAAG,KAAK;IACnB,cAAS,GAAG,EAAE;IAEN,gBAAW,GAAG,IAAIL,eAAe,CAASM,MAAM,CAACC,UAAU,CAAC;EAMjE;EAGHC,QAAQ;IAEN,IAAI,CAACH,YAAY,CAACI,YAAY,CAACC,SAAS,CAACC,KAAK,IAAG;MAC/C,IAAI,CAACC,SAAS,GAAGD,KAAK;IACxB,CAAC,CAAC;EACJ;EAGAE,eAAe;IACb,IAAI,CAACC,WAAW,CAACC,YAAY,EAAE,CAACL,SAAS,CAACM,KAAK,IAAG;MAChD,IAAIA,KAAK,GAAG,GAAG,EAAE;QACf,IAAI,CAACC,QAAQ,GAAG,KAAK;QACrB,IAAI,CAACC,QAAQ,GAAG,MAAM;OACvB,MAAM,IAAIF,KAAK,GAAG,GAAG,EAAE;QACtB,IAAI,CAACC,QAAQ,GAAG,IAAI;QACpB,IAAI,CAACC,QAAQ,GAAG,MAAM;;IAE1B,CAAC,CAAC;EACJ;CAsBD;AA3DYjB,eAAe,eAL3BF,SAAS,CAAC;EACToB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,GACWpB,eAAe,CA2D3B;SA3DYA,eAAe","names":["Component","BehaviorSubject","LayoutComponent","constructor","router","authservice","titleService","window","outerWidth","ngOnInit","currentTitle","subscribe","title","pageTitle","ngAfterViewInit","screenWidth","asObservable","width","showMenu","modeMenu","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/ikram/Desktop/travelSmileApp/travelSmileAppFrontEnd/src/app/containers/layout/layout.component.ts"],"sourcesContent":["import { AfterViewInit, Component, isDevMode, OnInit } from '@angular/core';\nimport { MatDrawerMode } from '@angular/material/sidenav'\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ToolbarTitleService } from 'src/app/containers/toolbar-title.service';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit, AfterViewInit {\n\n  modeMenu: MatDrawerMode = 'side';\n  showMenu = true;\n  userFirstName = '';\n  userLastName = '';\n  userEmail = '';\n  isUserAdmin = false;\n  pageTitle = '';\n\n  private screenWidth = new BehaviorSubject<number>(window.outerWidth);\n\n  constructor(\n    private router: Router,\n    private authservice: AuthService,\n    private titleService: ToolbarTitleService) {\n     }\n\n\n  ngOnInit(): void {\n\n    this.titleService.currentTitle.subscribe(title => {\n      this.pageTitle = title;\n    });\n  }\n\n\n  ngAfterViewInit(): void {\n    this.screenWidth.asObservable().subscribe(width => {\n      if (width < 640) {\n        this.showMenu = false;\n        this.modeMenu = 'over';\n      } else if (width > 640) {\n        this.showMenu = true;\n        this.modeMenu = 'side';\n      }\n    });\n  }\n\n\n /*  logOut() {\n    this.authservice.logout().subscribe(success => {\n      // Remove login cookie locally\n      // Because navigator won't save the one from the server in production\n      // TODO only the server can set login cookie\n      if (!isDevMode()) {\n        this.authservice.setCookie('login', '', 0);\n      }\n\n      this.router.navigate(['/login']);\n    });\n      error => {\n        console.error(error);\n        this.authservice.showErrorDialog('Impossible de se déconnecter',\n          'Veuillez essayer de se déconnecter à nouveau. Si le problème persiste, verifiez votre connexion internet');\n      }); \n\n  }*/\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}